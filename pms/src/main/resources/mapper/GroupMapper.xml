<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.pms.mapper.GroupMapper">
    <select id="getGroupByUser" resultType="com.dev.pms.domain.GroupVo">
        select g.group_id, g.group_name, g.group_description, g.group_aim, g.created_date, g.is_recruit, g.is_completed, b.is_admitted, b.is_manager
        from group_table g
        inner join belong_table b
        on g.group_id = b.group_id
        inner join user_table u
        on b.user_id = u.user_id
        where b.user_id = #{userId}
        order by u.user_id
    </select>

    <select id="getGroupAll" resultType="com.dev.pms.domain.GroupVo">
        select *
        from group_table
        <where>
            <if test="groupName != null and groupName != ''">
                and group_name like concat('%',#{groupName},'%')
            </if>
            <if test="groupAim != null and groupAim != ''">
                and group_aim like concat('%',#{groupAim},'%')
            </if>
        </where>
    </select>

    <select id="getGroupById" resultType="com.dev.pms.domain.GroupVo">
        select *
        from group_table
        where group_id=#{groupId}
    </select>

    <update id="setGroupAimCompleted">
        update group_table
        set is_completed=true
        where group_id=#{groupId}
    </update>

    <update id="setGroupRecruit">
        update group_table
        set is_recruit=#{isRecruit}
        where group_id=#{groupId}
    </update>

    <update id="updateGroupInfo">
        update group_table
        set group_name=#{groupName},
            group_description=#{groupDescription},
            group_aim=#{groupAim}
        where group_id=#{groupId}
    </update>

    <select id="checkAuthManagerBySessionId" resultType="Boolean">
        select b.is_manager
        from group_table as g
        inner join belong_table as b
        on g.group_id=b.group_id
        where g.group_id=#{groupId} and b.user_id=#{userId}
    </select>

    <insert id="createGroup" useGeneratedKeys="true">
        insert into group_table
        (group_name, group_description, group_aim, created_date, is_recruit, is_completed)
        values
        (#{groupName}, #{groupDescription}, #{groupAim}, current_timestamp, true, false)
    </insert>

    <select id="getRecentAddGroupId" resultType="long">
        select max(group_id)
        from group_table
    </select>
</mapper>
