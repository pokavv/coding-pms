<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.pms.mapper.BelongMapper">
    <insert id="joinGroup" useGeneratedKeys="true" parameterType="com.dev.pms.domain.BelongDto">
        insert into belong_table
        (user_id, group_id, is_admitted, is_manager)
        values
        (#{userId}, #{groupId}, false, false)
    </insert>

    <select id="checkBelongInfoByUser" resultType="com.dev.pms.domain.BelongDto">
        select *
        from belong_table
        where user_id = #{userId} and group_id = #{groupId}
    </select>

    <select id="checkPermissionReadPost" resultType="Long">
        select p.group_id
        from post_table as p
        inner join user_table as u
        on p.user_id = u.user_id
        inner join group_table as g
        on p.group_id = g.group_id
        where p.post_id = #{postId}
        and p.user_id = #{userId}
    </select>

    <select id="checkWritePermission" resultType="com.dev.pms.domain.PermissionVo">
        select *
        from belong_table
        where user_id=#{userId}
        and group_id=#{groupId}
        and is_admitted=true
    </select>

    <select id="checkManager" resultType="com.dev.pms.domain.PermissionVo">
        select *
        from belong_table
        where user_id=#{userId}
        and group_id=#{groupId}
        and is_admitted=true
        and is_manager=true
    </select>

    <update id="grantAuthorityTrue">
        update belong_table
        set is_admitted=true
        where user_id=#{userId} and group_id=#{groupId}
    </update>

    <update id="grantAuthorityManager">
        update belong_table
        set is_manager=true
        where user_id=#{userId} and group_id=#{groupId}
    </update>

    <select id="getUserByGroup" resultType="com.dev.pms.domain.UserVo">
        select u.user_id, u.user_name, u.email, u.phone, u.website
        from user_table as u
        inner join belong_table as b
        on u.user_id=b.belong_id
        where b.group_id=#{groupId}
    </select>

    <delete id="deleteUserByGroup">
        delete
        from belong_table
        where group_id=#{groupId} and user_id=#{userId}
    </delete>

    <select id="getGroupMember" resultType="com.dev.pms.domain.GroupMemberVo">
        select b.belong_id, b.is_admitted, b.is_manager, b.user_id, b.group_id, u.user_name, u.email, u.website
        from belong_table as b
        inner join user_table as u
        on b.user_id = u.user_id
        where b.group_id=#{groupId} and b.is_admitted=true
    </select>

    <select id="getGroupManager" resultType="com.dev.pms.domain.GroupMemberVo">
        select b.belong_id, b.is_admitted, b.is_manager, b.user_id, b.group_id, u.user_name, u.email, u.website
        from belong_table as b
        inner join user_table as u
        on b.user_id = u.user_id
        where b.group_id=#{groupId} and b.is_manager=true
    </select>

    <select id="getGroupJunior" resultType="com.dev.pms.domain.GroupMemberVo">
        select b.belong_id, b.is_admitted, b.is_manager, b.user_id, b.group_id, u.user_name, u.email, u.website
        from belong_table as b
        inner join user_table as u
        on b.user_id = u.user_id
        where b.group_id=#{groupId} and b.is_admitted=false
    </select>

    <insert id="addBelongCreateUser" useGeneratedKeys="true" parameterType="long">
        insert into belong_table
        (user_id, group_id, is_admitted, is_manager)
        values
        (#{userId}, #{groupId}, true, true)
    </insert>
</mapper>
